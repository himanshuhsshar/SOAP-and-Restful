// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.religareinsurance.service;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class Policy_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_policy$2d$no_QNAME = new QName("", "policy-no");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_policy$2d$holder$2d$name_QNAME = new QName("", "policy-holder-name");
    private static final javax.xml.namespace.QName ns1_effective$2d$from_QNAME = new QName("", "effective-from");
    private static final javax.xml.namespace.QName ns3_date_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE;
    private CombinedSerializer ns3_myns3_date__java_util_Calendar_Date_Serializer;
    private static final javax.xml.namespace.QName ns1_valid$2d$till_QNAME = new QName("", "valid-till");
    private static final javax.xml.namespace.QName ns1_insurred$2d$amount_QNAME = new QName("", "insurred-amount");
    private static final javax.xml.namespace.QName ns3_float_TYPE_QNAME = SchemaConstants.QNAME_TYPE_FLOAT;
    private CombinedSerializer ns3_myns3__float__float_Float_Serializer;
    private static final int myPOLICYNO_INDEX = 0;
    private static final int myPOLICYHOLDERNAME_INDEX = 1;
    private static final int myEFFECTIVEFROM_INDEX = 2;
    private static final int myVALIDTILL_INDEX = 3;
    private static final int myINSURREDAMOUNT_INDEX = 4;
    
    public Policy_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3_date__java_util_Calendar_Date_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_date_TYPE_QNAME);
        ns3_myns3__float__float_Float_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, float.class, ns3_float_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.religareinsurance.service.Policy instance = new com.religareinsurance.service.Policy();
        com.religareinsurance.service.Policy_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_policy$2d$no_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_policy$2d$no_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.religareinsurance.service.Policy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPOLICYNO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPolicyNo((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_policy$2d$holder$2d$name_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_policy$2d$holder$2d$name_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.religareinsurance.service.Policy_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPOLICYHOLDERNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPolicyHolderName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_effective$2d$from_QNAME)) {
                member = ns3_myns3_date__java_util_Calendar_Date_Serializer.deserialize(ns1_effective$2d$from_QNAME, reader, context);
                instance.setEffectiveFrom((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_valid$2d$till_QNAME)) {
                member = ns3_myns3_date__java_util_Calendar_Date_Serializer.deserialize(ns1_valid$2d$till_QNAME, reader, context);
                instance.setValidTill((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_insurred$2d$amount_QNAME)) {
                member = ns3_myns3__float__float_Float_Serializer.deserialize(ns1_insurred$2d$amount_QNAME, reader, context);
                instance.setInsurredAmount(((Float)member).floatValue());
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.religareinsurance.service.Policy instance = (com.religareinsurance.service.Policy)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.religareinsurance.service.Policy instance = (com.religareinsurance.service.Policy)obj;
        
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getPolicyNo(), ns1_policy$2d$no_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getPolicyHolderName(), ns1_policy$2d$holder$2d$name_QNAME, null, writer, context);
        ns3_myns3_date__java_util_Calendar_Date_Serializer.serialize(instance.getEffectiveFrom(), ns1_effective$2d$from_QNAME, null, writer, context);
        ns3_myns3_date__java_util_Calendar_Date_Serializer.serialize(instance.getValidTill(), ns1_valid$2d$till_QNAME, null, writer, context);
        ns3_myns3__float__float_Float_Serializer.serialize(new Float(instance.getInsurredAmount()), ns1_insurred$2d$amount_QNAME, null, writer, context);
    }
}
