// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.railyatra.services;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.server.*;
import javax.xml.rpc.handler.HandlerInfo;
import com.sun.xml.rpc.client.HandlerChainImpl;

public class TrainEnquiry_Tie extends com.sun.xml.rpc.server.TieBase implements
		SerializerConstants {

	public TrainEnquiry_Tie() throws Exception {
		super(
				new com.railyatra.services.bindings.RailYatraService_SerializerRegistry()
						.getRegistry());
		initialize(internalTypeMappingRegistry);
	}

	/*
	 * This method does the actual method invocation for operation: pnrStatus
	 */
	private void invoke_pnrStatus(StreamingHandlerState state) throws Exception {

		com.railyatra.services.TrainEnquiry_pnrStatus_RequestStruct myTrainEnquiry_pnrStatus_RequestStruct = null;
		Object myTrainEnquiry_pnrStatus_RequestStructObj = state.getRequest()
				.getBody().getValue();

		if (myTrainEnquiry_pnrStatus_RequestStructObj instanceof SOAPDeserializationState) {
			myTrainEnquiry_pnrStatus_RequestStruct = (com.railyatra.services.TrainEnquiry_pnrStatus_RequestStruct) ((SOAPDeserializationState) myTrainEnquiry_pnrStatus_RequestStructObj)
					.getInstance();
		} else {
			myTrainEnquiry_pnrStatus_RequestStruct = (com.railyatra.services.TrainEnquiry_pnrStatus_RequestStruct) myTrainEnquiry_pnrStatus_RequestStructObj;
		}

		try {
			java.lang.String result = ((com.railyatra.services.TrainEnquiry) getTarget())
					.pnrStatus(myTrainEnquiry_pnrStatus_RequestStruct
							.getString_1());
			com.railyatra.services.TrainEnquiry_pnrStatus_ResponseStruct myTrainEnquiry_pnrStatus_ResponseStruct = new com.railyatra.services.TrainEnquiry_pnrStatus_ResponseStruct();
			SOAPHeaderBlockInfo headerInfo;
			myTrainEnquiry_pnrStatus_ResponseStruct.setResult(result);

			SOAPBlockInfo bodyBlock = new SOAPBlockInfo(
					ns1_pnrStatus_pnrStatusResponse_QNAME);
			bodyBlock.setValue(myTrainEnquiry_pnrStatus_ResponseStruct);
			bodyBlock
					.setSerializer(ns2_myTrainEnquiry_pnrStatus_ResponseStruct_SOAPSerializer);
			state.getResponse().setBody(bodyBlock);
		} catch (javax.xml.rpc.soap.SOAPFaultException e) {
			SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
					e.getFaultString(), e.getFaultActor(), e.getDetail());
			SOAPBlockInfo faultBlock = new SOAPBlockInfo(
					com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
			faultBlock.setValue(fault);
			faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e
					.getDetail() == null));
			state.getResponse().setBody(faultBlock);
			state.getResponse().setFailure(true);
		}
	}

	/*
	 * This method does the actual method invocation for operation: trainStatus
	 */
	private void invoke_trainStatus(StreamingHandlerState state)
			throws Exception {

		com.railyatra.services.TrainEnquiry_trainStatus_RequestStruct myTrainEnquiry_trainStatus_RequestStruct = null;
		Object myTrainEnquiry_trainStatus_RequestStructObj = state.getRequest()
				.getBody().getValue();

		if (myTrainEnquiry_trainStatus_RequestStructObj instanceof SOAPDeserializationState) {
			myTrainEnquiry_trainStatus_RequestStruct = (com.railyatra.services.TrainEnquiry_trainStatus_RequestStruct) ((SOAPDeserializationState) myTrainEnquiry_trainStatus_RequestStructObj)
					.getInstance();
		} else {
			myTrainEnquiry_trainStatus_RequestStruct = (com.railyatra.services.TrainEnquiry_trainStatus_RequestStruct) myTrainEnquiry_trainStatus_RequestStructObj;
		}

		try {
			java.lang.String result = ((com.railyatra.services.TrainEnquiry) getTarget())
					.trainStatus(myTrainEnquiry_trainStatus_RequestStruct
							.getString_1());
			com.railyatra.services.TrainEnquiry_trainStatus_ResponseStruct myTrainEnquiry_trainStatus_ResponseStruct = new com.railyatra.services.TrainEnquiry_trainStatus_ResponseStruct();
			SOAPHeaderBlockInfo headerInfo;
			myTrainEnquiry_trainStatus_ResponseStruct.setResult(result);

			SOAPBlockInfo bodyBlock = new SOAPBlockInfo(
					ns1_trainStatus_trainStatusResponse_QNAME);
			bodyBlock.setValue(myTrainEnquiry_trainStatus_ResponseStruct);
			bodyBlock
					.setSerializer(ns2_myTrainEnquiry_trainStatus_ResponseStruct_SOAPSerializer);
			state.getResponse().setBody(bodyBlock);
		} catch (javax.xml.rpc.soap.SOAPFaultException e) {
			SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
					e.getFaultString(), e.getFaultActor(), e.getDetail());
			SOAPBlockInfo faultBlock = new SOAPBlockInfo(
					com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
			faultBlock.setValue(fault);
			faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e
					.getDetail() == null));
			state.getResponse().setBody(faultBlock);
			state.getResponse().setFailure(true);
		}
	}

	/*
	 * This method must determine the opcode of the operation that has been
	 * invoked.
	 */
	protected void peekFirstBodyElement(XMLReader bodyReader,
			SOAPDeserializationContext deserializationContext,
			StreamingHandlerState state) throws Exception {
		if (bodyReader.getName().equals(ns1_pnrStatus_pnrStatus_QNAME)) {
			state.getRequest().setOperationCode(pnrStatus_OPCODE);
		} else if (bodyReader.getName().equals(
				ns1_trainStatus_trainStatus_QNAME)) {
			state.getRequest().setOperationCode(trainStatus_OPCODE);
		} else {
			throw new SOAPProtocolViolationException(
					"soap.operation.unrecognized", bodyReader.getName()
							.toString());
		}
	}

	/*
	 * this method deserializes the request/response structure in the body
	 */
	protected void readFirstBodyElement(XMLReader bodyReader,
			SOAPDeserializationContext deserializationContext,
			StreamingHandlerState state) throws Exception {
		int opcode = state.getRequest().getOperationCode();
		switch (opcode) {
		case pnrStatus_OPCODE:
			deserialize_pnrStatus(bodyReader, deserializationContext, state);
			break;
		case trainStatus_OPCODE:
			deserialize_trainStatus(bodyReader, deserializationContext, state);
			break;
		default:
			throw new SOAPProtocolViolationException(
					"soap.operation.unrecognized",
					java.lang.Integer.toString(opcode));
		}
	}

	/*
	 * This method deserializes the body of the pnrStatus operation.
	 */
	private void deserialize_pnrStatus(XMLReader bodyReader,
			SOAPDeserializationContext deserializationContext,
			StreamingHandlerState state) throws Exception {
		java.lang.Object myTrainEnquiry_pnrStatus_RequestStructObj = ns2_myTrainEnquiry_pnrStatus_RequestStruct_SOAPSerializer
				.deserialize(ns1_pnrStatus_pnrStatus_QNAME, bodyReader,
						deserializationContext);

		SOAPBlockInfo bodyBlock = new SOAPBlockInfo(
				ns1_pnrStatus_pnrStatus_QNAME);
		bodyBlock.setValue(myTrainEnquiry_pnrStatus_RequestStructObj);
		state.getRequest().setBody(bodyBlock);
	}

	/*
	 * This method deserializes the body of the trainStatus operation.
	 */
	private void deserialize_trainStatus(XMLReader bodyReader,
			SOAPDeserializationContext deserializationContext,
			StreamingHandlerState state) throws Exception {
		java.lang.Object myTrainEnquiry_trainStatus_RequestStructObj = ns2_myTrainEnquiry_trainStatus_RequestStruct_SOAPSerializer
				.deserialize(ns1_trainStatus_trainStatus_QNAME, bodyReader,
						deserializationContext);

		SOAPBlockInfo bodyBlock = new SOAPBlockInfo(
				ns1_trainStatus_trainStatus_QNAME);
		bodyBlock.setValue(myTrainEnquiry_trainStatus_RequestStructObj);
		state.getRequest().setBody(bodyBlock);
	}

	/*
	 * This method must invoke the correct method on the servant based on the
	 * opcode.
	 */
	protected void processingHook(StreamingHandlerState state) throws Exception {
		switch (state.getRequest().getOperationCode()) {
		case pnrStatus_OPCODE:
			invoke_pnrStatus(state);
			break;
		case trainStatus_OPCODE:
			invoke_trainStatus(state);
			break;
		default:
			throw new SOAPProtocolViolationException(
					"soap.operation.unrecognized",
					java.lang.Integer.toString(state.getRequest()
							.getOperationCode()));
		}
	}

	public java.lang.String getDefaultEnvelopeEncodingStyle() {
		return SOAPNamespaceConstants.ENCODING;
	}

	public java.lang.String getImplicitEnvelopeEncodingStyle() {
		return "";
	}

	/*
	 * This method must determine the opcode of the operation given the QName of
	 * the first body element.
	 */
	public int getOpcodeForFirstBodyElementName(QName name) {
		if (name == null) {
			return InternalSOAPMessage.NO_OPERATION;
		}
		if (name.equals(ns1_pnrStatus_pnrStatus_QNAME)) {
			return pnrStatus_OPCODE;
		}
		if (name.equals(ns1_trainStatus_trainStatus_QNAME)) {
			return trainStatus_OPCODE;
		}
		return super.getOpcodeForFirstBodyElementName(name);
	}

	private Method internalGetMethodForOpcode(int opcode)
			throws ClassNotFoundException, NoSuchMethodException {

		Method theMethod = null;

		switch (opcode) {
		case pnrStatus_OPCODE: {
			Class[] carray = { java.lang.String.class };
			theMethod = (com.railyatra.services.TrainEnquiry.class).getMethod(
					"pnrStatus", carray);
		}
			break;

		case trainStatus_OPCODE: {
			Class[] carray = { java.lang.String.class };
			theMethod = (com.railyatra.services.TrainEnquiry.class).getMethod(
					"trainStatus", carray);
		}
			break;

		default:
		}
		return theMethod;
	}

	private Method[] methodMap = new Method[2];

	/*
	 * This method returns the Method Obj for a specified opcode.
	 */
	public Method getMethodForOpcode(int opcode) throws ClassNotFoundException,
			NoSuchMethodException {

		if (opcode <= InternalSOAPMessage.NO_OPERATION) {
			return null;
		}

		if (opcode >= 2) {
			return null;
		}

		if (methodMap[opcode] == null) {
			methodMap[opcode] = internalGetMethodForOpcode(opcode);
		}

		return methodMap[opcode];
	}

	/*
	 * This method returns an array containing (prefix, nsURI) pairs.
	 */
	protected java.lang.String[] getNamespaceDeclarations() {
		return myNamespace_declarations;
	}

	/*
	 * This method returns an array containing the names of the headers we
	 * understand.
	 */
	public javax.xml.namespace.QName[] getUnderstoodHeaders() {
		return understoodHeaderNames;
	}

	protected boolean preHandlingHook(StreamingHandlerState state)
			throws Exception {
		boolean bool = false;
		bool = super.preHandlingHook(state);
		return bool;
	}

	protected void postResponseWritingHook(StreamingHandlerState state)
			throws Exception {
		super.postResponseWritingHook(state);
	}

	private void initialize(InternalTypeMappingRegistry registry)
			throws Exception {
		ns2_myTrainEnquiry_trainStatus_ResponseStruct_SOAPSerializer = (CombinedSerializer) registry
				.getSerializer(
						SOAPConstants.NS_SOAP_ENCODING,
						com.railyatra.services.TrainEnquiry_trainStatus_ResponseStruct.class,
						ns2_trainStatusResponse_TYPE_QNAME);
		ns2_myTrainEnquiry_trainStatus_RequestStruct_SOAPSerializer = (CombinedSerializer) registry
				.getSerializer(
						SOAPConstants.NS_SOAP_ENCODING,
						com.railyatra.services.TrainEnquiry_trainStatus_RequestStruct.class,
						ns2_trainStatus_TYPE_QNAME);
		ns2_myTrainEnquiry_pnrStatus_ResponseStruct_SOAPSerializer = (CombinedSerializer) registry
				.getSerializer(
						SOAPConstants.NS_SOAP_ENCODING,
						com.railyatra.services.TrainEnquiry_pnrStatus_ResponseStruct.class,
						ns2_pnrStatusResponse_TYPE_QNAME);
		ns2_myTrainEnquiry_pnrStatus_RequestStruct_SOAPSerializer = (CombinedSerializer) registry
				.getSerializer(
						SOAPConstants.NS_SOAP_ENCODING,
						com.railyatra.services.TrainEnquiry_pnrStatus_RequestStruct.class,
						ns2_pnrStatus_TYPE_QNAME);
	}

	private static final javax.xml.namespace.QName portName = new QName(
			"http://www.railyatra.com/enquiry/service", "TrainEnquiry");
	private static final int pnrStatus_OPCODE = 0;
	private static final int trainStatus_OPCODE = 1;
	private static final javax.xml.namespace.QName ns1_pnrStatus_pnrStatus_QNAME = new QName(
			"http://www.railyatra.com/enquiry/service", "pnrStatus");
	private static final javax.xml.namespace.QName ns2_pnrStatus_TYPE_QNAME = new QName(
			"http://www.railyatra.com/enquiry/types", "pnrStatus");
	private CombinedSerializer ns2_myTrainEnquiry_pnrStatus_RequestStruct_SOAPSerializer;
	private static final javax.xml.namespace.QName ns1_pnrStatus_pnrStatusResponse_QNAME = new QName(
			"http://www.railyatra.com/enquiry/service", "pnrStatusResponse");
	private static final javax.xml.namespace.QName ns2_pnrStatusResponse_TYPE_QNAME = new QName(
			"http://www.railyatra.com/enquiry/types", "pnrStatusResponse");
	private CombinedSerializer ns2_myTrainEnquiry_pnrStatus_ResponseStruct_SOAPSerializer;
	private static final javax.xml.namespace.QName ns1_trainStatus_trainStatus_QNAME = new QName(
			"http://www.railyatra.com/enquiry/service", "trainStatus");
	private static final javax.xml.namespace.QName ns2_trainStatus_TYPE_QNAME = new QName(
			"http://www.railyatra.com/enquiry/types", "trainStatus");
	private CombinedSerializer ns2_myTrainEnquiry_trainStatus_RequestStruct_SOAPSerializer;
	private static final javax.xml.namespace.QName ns1_trainStatus_trainStatusResponse_QNAME = new QName(
			"http://www.railyatra.com/enquiry/service", "trainStatusResponse");
	private static final javax.xml.namespace.QName ns2_trainStatusResponse_TYPE_QNAME = new QName(
			"http://www.railyatra.com/enquiry/types", "trainStatusResponse");
	private CombinedSerializer ns2_myTrainEnquiry_trainStatus_ResponseStruct_SOAPSerializer;
	private static final java.lang.String[] myNamespace_declarations = new java.lang.String[] {
			"ns0", "http://www.railyatra.com/enquiry/types" };

	private static final QName[] understoodHeaderNames = new QName[] {};
}
